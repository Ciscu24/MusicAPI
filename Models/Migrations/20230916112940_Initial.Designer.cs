// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.Context;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230916112940_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Models.ArtistModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Post Malone"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Area 21"
                        });
                });

            modelBuilder.Entity("Models.Models.ArtistSongModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ArtistId")
                        .HasColumnType("bigint");

                    b.Property<long>("SongId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistsSongs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ArtistId = 1L,
                            SongId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            ArtistId = 1L,
                            SongId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            ArtistId = 2L,
                            SongId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            ArtistId = 1L,
                            SongId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            ArtistId = 2L,
                            SongId = 4L
                        });
                });

            modelBuilder.Entity("Models.Models.GenreModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Hip-hop"
                        });
                });

            modelBuilder.Entity("Models.Models.SongModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<long>("GenreId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Duration = 134,
                            GenreId = 1L,
                            Quality = 0,
                            ReleaseDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Mourning"
                        },
                        new
                        {
                            Id = 2L,
                            Duration = 158,
                            GenreId = 2L,
                            Quality = 1,
                            ReleaseDate = new DateTime(2018, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sunflower"
                        },
                        new
                        {
                            Id = 3L,
                            Duration = 147,
                            GenreId = 1L,
                            Quality = 4,
                            ReleaseDate = new DateTime(2016, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Spaceships"
                        },
                        new
                        {
                            Id = 4L,
                            Duration = 212,
                            GenreId = 1L,
                            Quality = 2,
                            ReleaseDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "HELP"
                        });
                });

            modelBuilder.Entity("Models.Models.ArtistSongModel", b =>
                {
                    b.HasOne("Models.Models.ArtistModel", "Artist")
                        .WithMany("ArtistsSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.SongModel", "Song")
                        .WithMany("ArtistsSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("Models.Models.SongModel", b =>
                {
                    b.HasOne("Models.Models.GenreModel", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("Models.Models.ArtistModel", b =>
                {
                    b.Navigation("ArtistsSongs");
                });

            modelBuilder.Entity("Models.Models.GenreModel", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("Models.Models.SongModel", b =>
                {
                    b.Navigation("ArtistsSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
